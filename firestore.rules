rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /carts/{cartId} {
      allow read, write: if isAuthenticated() && request.auth.uid == cartId;
    }

    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated();
      // Permitir que el dueño actualice campos de su propia orden (para flujo de pago)
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == resource.data.userId);
      // Permitir eliminar órdenes solo a administradores (para panel admin)
      allow delete: if isAdmin();
    }

    // Reglas para reseñas/comentarios de productos
    match /reviews/{reviewId} {
      // Lectura pública de reviews
      allow read: if true;
      // Crear solo usuarios autenticados
      allow create: if isAuthenticated();
      // Actualizar/eliminar: dueño de la review o admin
      allow update, delete: if isAuthenticated() && (
        isAdmin() || request.auth.uid == resource.data.userId
      );
    }
  }
}